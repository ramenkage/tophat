<?php

define('DROOGLE_BROWSER_URL', 'droogle');

/**
 * @file
 * A module to integrate Drupal with Google Drive.
 */

/**
 * Implements hook_theme().
 */
function droogle_theme() {
  return [
    'droogle_list_files' => [
      'variables' => [
        'service' => NULL,
        'disconnect_link' => NULL,
      ],
    ],
  ];
}

/**
 * Returns ID of the active directory in the Droogle navigator.
 */
function droogle_get_dir_id() {
  return !empty($_GET['dir_id']) ? $_GET['dir_id'] : 'root';
}

/**
 * Preprocess for theme item droogle_list_files.
 */
function template_preprocess_droogle_list_files(&$variables) {
  $service = $variables['service'];
  $dir_id = droogle_get_dir_id();
  $params = array(
    'q' => "'" . $dir_id . "' in parents and trashed = false",
    'maxResults' => 1000,
    'orderBy' => 'folder',
  );

  // Take url object for folders.
  $request_path = \Drupal::service('path.current')->getPath();
  $url_object = \Drupal::service('path.validator')->getUrlIfValid($request_path);

  // Try to retrieve the list of files from Google Drive
  try {
    $files = $service->files->listFiles($params);

    $file_list = $files->getItems();
    $variables['list'] = [];

    // todo replace to breadcrumbs.
    // Back link.
    if ($dir_id !== 'root') {
      // Get parent directory.
      $parents = $service->parents->listParents($dir_id);
      // If current directory has parents.
      if ($parents = $parents->getItems()) {
        $parent = reset($parents);

        $query = $_GET;
        $query['dir_id'] = $parent->getId();
        $url_object->setOptions(['query' => $query]);
        $back_link_path = $url_object->toString();

        $variables['list'][] = '<li class="folder-up"><a href="' . $back_link_path . '">' .t('Return back') . '</a></li>';
      }
    }

    // todo refactoring.
    // Prepare the list of items.
    foreach ($file_list as $file) {
      switch ($file['mimeType']) {
        case 'application/vnd.google-apps.folder':
          $folder_path = '#';
          if ($url_object) {
            $query = $_GET;
            $query['dir_id'] = $file['id'];
            $url_object->setOptions(['query' => $query]);
            $folder_path = $url_object->toString();
          }
          $variables['list'][] = '<li style="list-style-image: url(\'' . $file['iconLink'] . '\')"><a href="' . $folder_path . '">' . $file["title"] . '</a></li>';
          break;

        default:
          $variables['list'][] = '<li style="list-style-image: url(\'' . $file['iconLink'] . '\')"><a href="' . $file["alternateLink"] . '" target="_blank">' . $file["title"] . '</a></li>';
          break;
      }
    }
  }
  // Just return auth link if something went wrong.
  catch (\Google_Service_Exception $e) {
    $variables['list'][] = t('Something went wrong. Try to connect again.');
  }
}
