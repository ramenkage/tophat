<?php

/**
 * @file
 * Contains hook implementations for the Puzzle Hunt Tracker module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;

/**
 * Implements hook_entity_presave().
 */
function puzzlehunt_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
/*  if ($entity instanceof ContentEntityInterface && $entity->isTranslatable()) {
    $route_match = \Drupal::routeMatch();
    \Drupal::service('content_translation.synchronizer')->synchronizeFields($entity, $entity->language()->getId(), $route_match->getParameter('source_langcode'));
  }*/
}

/**
 * Implements hook_entity_operation().
 */
function puzzlehunt_entity_operation(EntityInterface $entity) {
  if ($entity->getEntityTypeId() !== 'node') {
    return;
  }

  $nodeType = $entity->bundle();
  $nodeId = $entity->id();
  $userId = \Drupal::currentUser()->id();
  $existingUsers = array_column($entity->field_current_solvers->getValue(), 'target_id');

  if ($nodeType == 'puzzle') {
    if (!in_array($userId, $existingUsers)) {
      $operations['add_solver'] = [
        'title' => t('Start Working'),
        'url' => Url::fromRoute('puzzlehunt.add_solver', ['node' => $nodeId]),
        'weight' => 0,
      ];
    }
    else {
      $operations['remove_solver'] = [
        'title' => t('Stop Working'),
        'url' => Url::fromRoute('puzzlehunt.remove_solver', ['node' => $nodeId]),
        'weight' => 1,
      ];
    }
  }

  return $operations;
}
